
XPath (XML Path Language) es un lenguaje que se utiliza para seleccionar nodos en un documento XML. XPath también puede usarse para computar valores (como strings, números o booleanos) desde el contenido de un documento XML.

### Conceptos Básicos de XPath

1. **Nodos**:
   - **Elementos**: Los nodos elementales de un documento XML.
   - **Atributos**: Los nodos de atributo.
   - **Texto**: El contenido de texto de los nodos.
   - **Nodos Raíz**: El nodo que representa el documento entero.
   - **Nodos de Espacio de Nombre**: Los nodos que representan los espacios de nombre.

2. **Rutas**:
   - **Rutas Absolutas**: Empiezan desde la raíz del documento (e.g., `/library/book`).
   - **Rutas Relativas**: Empiezan desde el nodo actual (e.g., `book/title`).

3. **Expresiones XPath**:
   - **Selección de nodos**: Utilizando varias sintaxis para navegar a través del árbol XML.
     - `/`: Selecciona desde el nodo raíz.
     - `//`: Selecciona nodos en el documento desde el nodo actual que coinciden con la selección sin importar dónde se encuentren.
     - `.`: Selecciona el nodo actual.
     - `..`: Selecciona el nodo padre del nodo actual.
     - `@`: Selecciona atributos.
   - **Predicados**: Se utilizan para encontrar un nodo específico o un nodo que contiene un valor específico (e.g., `/library/book[price>35.00]`).

4. **Funciones XPath**:
   - **Funciones de Nodo**: `last()`, `position()`, `count()`, `local-name()`, `namespace-uri()`, `name()`.
   - **Funciones de String**: `starts-with()`, `contains()`, `substring()`, `string-length()`, `normalize-space()`, `translate()`.
   - **Funciones Numéricas**: `sum()`, `floor()`, `ceiling()`, `round()`.
   - **Funciones Booleanas**: `boolean()`, `not()`, `true()`, `false()`.

### Ejemplos Comunes de XPath

1. **Seleccionar todos los elementos**: `//element`
2. **Seleccionar un elemento específico**: `//element[@id='value']`
3. **Seleccionar un elemento hijo específico**: `/parent/child`
4. **Seleccionar un elemento con texto específico**: `//element[text()='some text']`
5. **Seleccionar un elemento basado en posición**: `(//element)[1]`

